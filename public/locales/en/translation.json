{
  "navbar": {
    "docs": "Docs",
    "components": "Components",
    "blog": "Blog",
    "playground": "Playground",
    "githubAlt": "GitHub Repository",
    "toggleTheme": "Toggle theme",
    "changeLanguage": "Change language",
    "openMenu": "Open menu"
  },
  "hero": {
    "title": "Ultra-Fast UI Development",
    "subtitle": "CubexUI provides beautifully designed, accessible, and customizable React components built with Tailwind CSS to accelerate your development workflow.",
    "getStarted": "Get Started",
    "browseComponents": "Explore!"
  },
  "homePage": {
    "trustedTitle": "Trusted by Leading Teams",
    "trustedSubtitle": "Modern development teams choose CubexUI to build scalable and elegant user interfaces.",
    "communityTitle": "Join the Vibrant Community",
    "communitySubtitle": "CubexUI is an open-source project driven by its community. Contribute, learn, and grow together!",
    "githubStars": "GitHub Stars",
    "contributors": "Contributors",
    "development": "Active Development",
    "whyCubexTitle": "Why Choose CubexUI?",
    "whyCubexSubtitle": "Focus on your logic, let CubexUI handle the presentation.",
    "feature1Title": "Developer Experience",
    "feature1Desc": "Intuitive API, excellent TypeScript support, and clear documentation.",
    "feature2Title": "Performance",
    "feature2Desc": "Optimized components designed for speed and minimal bundle size.",
    "feature3Title": "Customizable",
    "feature3Desc": "Leverage the full power of Tailwind CSS for easy themeing and styling.",
    "feature4Title": "Accessible",
    "feature4Desc": "Built with accessibility best practices (WAI-ARIA) from the ground up.",
    "feature5Title": "Support",
    "feature5Desc": "Fast support and an active community to answer your questions and share new contributions.",
    "feature6Title": "Efficiency",
    "feature6Desc": "Optimized components for fast and efficient performance, so your application runs smoothly.",
    "feature7Title": "Compatibility",
    "feature7Desc": "Compatibility with the latest versions of React and other popular libraries.",
    "feature8Title": "Mobile",
    "feature8Desc": "All components are fully responsive.",
    "callToActionTitle": "Ready to Boost Your Productivity?",
    "callToActionSubtitle": "Start integrating CubexUI in your project today and experience the difference.",
    "viewDocs": "View Documentation",
    "explorePlayground": "Explore Playground",
    "showcaseTitle": "Explore the Possibilities",
    "showcaseSubtitle": "A glimpse into the versatile components you can build or use.",
    "showcaseButton": "Action",
    "showcaseEmail": "Email",
    "showcaseToggle": "Mode",
    "showcaseName": "John Doe",
    "showcaseStatus": "Active",
    "showcaseGradient": "Gradient",
    "showcaseNeumorphic": "Neumorphic Style",
    "showcasePlaceholder": "Enter value..."
  },
  "componentsPage": {
    "title": "Components",
    "description": "Explore our comprehensive suite of UI components. Filter by type, category or search by name/tag.",
    "libraryTab": "Library (CDN)",
    "snippetsTab": "Snippets (Copy/Paste)",
    "typeAll": "All Types",
    "typeLibrary": "Library",
    "typeSnippet": "Snippets",
    "allComponents": "All Components",
    "searchPlaceholder": "Search components...",
    "noResults": "No components found matching your criteria.",
    "categories": {
      "forms": "Forms",
      "dataDisplay": "Data Display",
      "feedback": "Feedback",
      "navigation": "Navigation",
      "overlay": "Overlay",
      "layout": "Layout",
      "media": "Media",
      "utility": "Utility",
      "interaction": "Interaction",
      "favorites": "Favorites"
    },
    "library": {
      "buttonDesc": "Interactive element for user actions.",
      "cardDesc": "Container for grouping related content.",
      "avatarDesc": "Represents a user or entity.",
      "switchDesc": "On/off toggle control.",
      "inputDesc": "Standard input field for text entry.",
      "alertDesc": "Displays important messages.",
      "dialogDesc": "Modal window for focused tasks.",
      "tooltipDesc": "Shows information on hover.",
      "popoverDesc": "Displays content related to an element.",
      "progressDesc": "Indicates the completion status.",
      "sliderDesc": "Allows selecting a value from a range.",
      "checkboxDesc": "Select one or more options.",
      "radioDesc": "Select a single option from a set.",
      "selectDesc": "Dropdown for selecting an option.",
      "tableDesc": "Displays data in rows and columns.",
      "accordionDesc": "Collapsible content sections.",
      "badgeDesc": "Small label for status or count.",
      "skeletonDesc": "Placeholder for loading content.",
      "tabsDesc": "Switch between different views.",
      "toastDesc": "Brief, temporary notifications."
    },
    "snippets": {
      "gradientButtonDesc": "Button with a gradient background.",
      "neumorphicCardDesc": "Card with a soft UI effect.",
      "animatedInputDesc": "Input with focus animation.",
      "pulsingButtonDesc": "Button with a pulsing animation.",
      "glassmorphismCardDesc": "Card with a frosted glass effect.",
      "textRevealDesc": "Text reveal effect on load/scroll.",
      "3dButtonDesc": "Button with a pseudo-3D effect.",
      "darkModeToggleDesc": "Simple CSS dark mode toggle.",
      "cssSpinnerDesc": "Basic loading spinner animation.",
      "imageHoverZoomDesc": "Image zooms in on hover.",
      "animatedLinkDesc": "Link with an animated underline.",
      "parallaxBgDesc": "Background image with parallax effect.",
      "inputIconDesc": "Input field with an embedded icon.",
      "bentoGridDesc": "CSS grid layout example.",
      "scrollIndicatorDesc": "Page scroll progress bar.",
      "customScrollbarDesc": "Styled browser scrollbar.",
      "typingEffectDesc": "Simulates text being typed.",
      "confettiButtonDesc": "Button triggers confetti animation."
    },
    "copyCode": "Copy Code",
    "copyCdn": "Copy CDN Link",
    "comingSoon": "More components coming soon...",
    "copied": "Copied!",
    "viewCodeButton": "View Code",
    "viewCodeTitle": "View Code",
    "viewCodeDescLibrary": "Example React usage. Assumes component is loaded via CDN.",
    "viewCodeDescSnippet": "Copy and paste this HTML/CSS/Tailwind snippet.",
    "closeButton": "Close",
    "copyError": "Failed to copy code."
  },
  "docsPage": {
    "sidebarTitle": "On this page",
    "introTitle": "Introduction",
    "installTitle": "Installation",
    "conceptsTitle": "Core Concepts",
    "themingTitle": "Theming",
    "usageTitle": "Usage Guide",
    "apiTitle": "API Reference",
    "authTitle": "Authentication",
    "favTitle": "Favorites",
    "metaTitle": "Documentation",
    "mainTitle": "Get Started with CubexUI",
    "mainSubtitle": "Welcome to the CubexUI documentation. Find everything you need to integrate beautiful, functional components into your React applications.",
    "whatIsTitle": "What is CubexUI?",
    "whatIsDesc": "CubexUI is a modern component library focused on aesthetics, performance, and developer experience, built on top of Radix UI and Tailwind CSS.",
    "featuresTitle": "Key Features",
    "featuresDesc": "Explore the core benefits: type safety, accessibility, comprehensive theming, and seamless integration with Tailwind.",
    "installSteps": "To get started, install CubexUI using your preferred package manager:",
    "installTailwind": "Ensure you have Tailwind CSS configured in your project. You'll need to add the library's paths to your `tailwind.config.js` content array:",
    "conceptsIntro": "Understand the fundamental principles behind CubexUI:",
    "concept1": "Composition: Build complex UIs by combining simple, focused components.",
    "concept2": "Accessibility (A11y): Components follow WAI-ARIA standards for universal usability.",
    "concept3": "Customization: Easily adapt components using Tailwind utility classes and CSS variables.",
    "concept4": "Developer Experience (DX): Designed for efficiency with clear APIs and TypeScript support.",
    "themingIntro": "CubexUI uses CSS variables for easy customization of colors, spacing, radius, etc. Override them in your global CSS:",
    "themingAdvanced": "Learn more about advanced theming, dark mode integration, and creating custom themes.",
    "usageIntro": "Import components and start building your UI:",
    "usageLink": "Find detailed usage examples and API specifications for each component in the",
    "componentsSection": "Components section",
    "apiIntro": "Detailed API documentation for each component, including props, types, and default values, is available on their respective pages in the Components section.",
    "browseApiButton": "Browse Component APIs",
    "authIntro": "CubexUI includes built-in support for user authentication powered by Supabase. You can easily manage user sessions, registration, and login.",
    "authPlayground": "Access to the Playground requires user authentication.",
    "favIntro": "Logged-in users can mark components as favorites for quick access. Favorite components are stored per user in the database. Access them via the user menu or the My Favorites page."
  },
  "blogPage": {
    "title": "CubexUI Blog",
    "description": "Stay updated with the latest news, releases, tips, and tutorials from the CubexUI team.",
    "readMore": "Read More",
    "posts": {
      "post1": {
        "title": "CubexUI v1.0 is Here!",
        "description": "We are thrilled to announce the official launch of CubexUI v1.0. Explore the core components and get started building amazing interfaces today."
      },
      "post2": {
        "title": "Mastering Theming in CubexUI",
        "description": "Learn how to leverage the powerful theming capabilities, including dark mode, to match CubexUI perfectly with your brand identity."
      },
      "post3": {
        "title": "Introducing User Favorites & Auth",
        "description": "CubexUI now supports user authentication via Supabase and allows logged-in users to save their favorite components for easy access."
      },
      "post4": {
        "title": "Component Showcase: Library vs Snippets",
        "description": "Understand the difference between ready-to-use library components (via CDN) and copy-paste HTML/CSS snippets available in CubexUI."
      },
      "post5": {
        "title": "New Features: Account Settings & More!",
        "description": "Manage your profile, view your favorite components on a dedicated page, plus numerous component additions and improvements across the site."
      }
    }
  },
  "playgroundPage": {
    "title": "Playground",
    "description": "Experiment with HTML, CSS, and Tailwind CSS live. Select a mode, edit the code, and see instant updates in the preview.",
    "warning": "Note: This playground is for demonstration. Avoid entering untrusted code. Script execution is disabled.",
    "loginRequired": "You must be logged in to use the Playground.",
    "editorTitle": "Editor",
    "previewTitle": "Preview",
    "loadingPreview": "Loading preview...",
    "modeHtmlTailwind": "HTML + Tailwind",
    "modeHtmlCss": "HTML + CSS",
    "selectMode": "Select Mode:",
    "htmlTab": "HTML",
    "cssTab": "CSS"
  },
  "footer": {
    "copy": "© {year} CubexUI. All rights reserved.",
    "privacy": "Privacy Policy",
    "terms": "Terms of Service"
  },
  "languages": {
    "en": "English",
    "es": "Spanish",
    "fr": "Français",
    "de": "Deutsch"
  },
  "auth": {
    "loginTitle": "Login to CubexUI",
    "loginSubtitle": "Access your account and saved preferences.",
    "registerTitle": "Create an Account",
    "registerSubtitle": "Join CubexUI to save favorites and more.",
    "emailLabel": "Email",
    "passwordLabel": "Password",
    "usernameLabel": "Username",
    "usernamePlaceholder": "Your cool username",
    "loginButton": "Login",
    "registerButton": "Create Account",
    "registerButtonShort": "Sign Up",
    "logoutButton": "Logout",
    "noAccount": "Don't have an account?",
    "haveAccount": "Already have an account?",
    "registerLink": "Sign up",
    "loginLink": "Log in",
    "loginSuccessTitle": "Login Successful",
    "loginSuccessDesc": "Welcome back!",
    "loginErrorTitle": "Login Failed",
    "loginErrorDesc": "Invalid email or password. Please try again.",
    "registerSuccessTitle": "Registration Successful",
    "registerSuccessDesc": "Please check your email to confirm your account.",
    "registerErrorTitle": "Registration Failed",
    "registerErrorDesc": "Could not create account. Please try again.",
    "logoutSuccess": "Logged out successfully.",
    "logoutError": "Failed to logout.",
    "myAccount": "My Account",
    "profile": "Profile",
    "settings": "Account Settings",
    "favorites": "My Favorites"
  },
  "favorites": {
    "addLabel": "Add to favorites",
    "removeLabel": "Remove from favorites",
    "added": "Component added to favorites!",
    "removed": "Component removed from favorites.",
    "fetchError": "Could not load favorites.",
    "toggleError": "Failed to update favorites.",
    "loginRequired": "Please login to manage favorites.",
    "pageTitle": "My Favorites",
    "pageDescription": "Quick access to your saved components.",
    "searchPlaceholder": "Search favorites...",
    "loading": "Loading favorites...",
    "noFavoritesFoundTitle": "No Favorites Found",
    "noFavoritesSearch": "No favorites match your search.",
    "noFavoritesStart": "Start adding components you love!",
    "browseComponentsLink": "Browse Components",
    "noFavoritesYet": "You haven't added any favorites yet."
  },
  "settings": {
    "pageTitle": "Account Settings",
    "pageDescription": "Manage your profile information.",
    "profileTitle": "Profile Information",
    "profileDescription": "Update your username and avatar.",
    "avatarLabel": "Avatar",
    "uploadAvatarButton": "Upload Avatar",
    "uploading": "Uploading...",
    "avatarHelp": "Recommended: Square image, max 2MB.",
    "avatarNoFileError": "You must select an image to upload.",
    "avatarUrlError": "Could not get public URL for avatar.",
    "avatarUploadSuccess": "Avatar updated successfully!",
    "avatarUploadErrorTitle": "Error Uploading Avatar",
    "emailHelp": "Email cannot be changed here.",
    "updateButton": "Update Profile",
    "updateSuccessTitle": "Profile Updated",
    "updateSuccessDesc": "Your profile information has been saved.",
    "updateErrorTitle": "Update Failed",
    "loadingProfile": "Loading profile...",
    "notLoggedIn": "Please log in to view settings."
  }
}